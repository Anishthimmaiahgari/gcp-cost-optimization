{"ast":null,"code":"// AuthService.js\nconst AuthService = {\n  isAuthenticated: false,\n  login(email, password) {\n    // In a real app, this would validate against a backend\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      const user = JSON.parse(savedUser);\n      if (user.email === email && user.password === password) {\n        this.isAuthenticated = true;\n        localStorage.setItem('isAuthenticated', 'true');\n        return true;\n      }\n    }\n    return false;\n  },\n  signup(name, email, password) {\n    // In a real app, this would send data to a backend\n    const user = {\n      name,\n      email,\n      password\n    };\n    localStorage.setItem('user', JSON.stringify(user));\n    return true;\n  },\n  logout() {\n    this.isAuthenticated = false;\n    localStorage.removeItem('isAuthenticated');\n  },\n  checkAuth() {\n    this.isAuthenticated = localStorage.getItem('isAuthenticated') === 'true';\n    return this.isAuthenticated;\n  }\n};\nexport default AuthService;","map":{"version":3,"names":["AuthService","isAuthenticated","login","email","password","savedUser","localStorage","getItem","user","JSON","parse","setItem","signup","name","stringify","logout","removeItem","checkAuth"],"sources":["C:/Users/acer/Downloads/cloud-auth-dashboard/frontend/src/services/AuthService.js"],"sourcesContent":["// AuthService.js\r\nconst AuthService = {\r\n    isAuthenticated: false,\r\n    \r\n    login(email, password) {\r\n      // In a real app, this would validate against a backend\r\n      const savedUser = localStorage.getItem('user');\r\n      if (savedUser) {\r\n        const user = JSON.parse(savedUser);\r\n        if (user.email === email && user.password === password) {\r\n          this.isAuthenticated = true;\r\n          localStorage.setItem('isAuthenticated', 'true');\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n    \r\n    signup(name, email, password) {\r\n      // In a real app, this would send data to a backend\r\n      const user = { name, email, password };\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      return true;\r\n    },\r\n    \r\n    logout() {\r\n      this.isAuthenticated = false;\r\n      localStorage.removeItem('isAuthenticated');\r\n    },\r\n    \r\n    checkAuth() {\r\n      this.isAuthenticated = localStorage.getItem('isAuthenticated') === 'true';\r\n      return this.isAuthenticated;\r\n    }\r\n  };\r\n  \r\n  export default AuthService;"],"mappings":"AAAA;AACA,MAAMA,WAAW,GAAG;EAChBC,eAAe,EAAE,KAAK;EAEtBC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IACrB;IACA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,IAAIF,SAAS,EAAE;MACb,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC;MAClC,IAAIG,IAAI,CAACL,KAAK,KAAKA,KAAK,IAAIK,IAAI,CAACJ,QAAQ,KAAKA,QAAQ,EAAE;QACtD,IAAI,CAACH,eAAe,GAAG,IAAI;QAC3BK,YAAY,CAACK,OAAO,CAAC,iBAAiB,EAAE,MAAM,CAAC;QAC/C,OAAO,IAAI;MACb;IACF;IACA,OAAO,KAAK;EACd,CAAC;EAEDC,MAAMA,CAACC,IAAI,EAAEV,KAAK,EAAEC,QAAQ,EAAE;IAC5B;IACA,MAAMI,IAAI,GAAG;MAAEK,IAAI;MAAEV,KAAK;MAAEC;IAAS,CAAC;IACtCE,YAAY,CAACK,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACK,SAAS,CAACN,IAAI,CAAC,CAAC;IAClD,OAAO,IAAI;EACb,CAAC;EAEDO,MAAMA,CAAA,EAAG;IACP,IAAI,CAACd,eAAe,GAAG,KAAK;IAC5BK,YAAY,CAACU,UAAU,CAAC,iBAAiB,CAAC;EAC5C,CAAC;EAEDC,SAASA,CAAA,EAAG;IACV,IAAI,CAAChB,eAAe,GAAGK,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,KAAK,MAAM;IACzE,OAAO,IAAI,CAACN,eAAe;EAC7B;AACF,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}